{"version":3,"sources":["webpack://laravel-react/./resources/js/modules/auth/pages/register/Page.js","webpack://laravel-react/./resources/js/modules/auth/pages/register/components/Form.js","webpack://laravel-react/./resources/js/modules/auth/pages/register/index.js"],"names":["Page","props","validator","Validator","name","email","password","passwordConfirmation","state","credentials","errors","fields","handleChange","bind","handleSubmit","$","attr","removeAttr","value","setState","remove","validate","then","e","preventDefault","validateAll","success","submit","dispatch","register","error","statusCode","_","message","field","add","isAuthenticated","Component","PropTypes","isRequired","displayName","propTypes","Form","has","target","first","any","mapStateToProps","auth","connect"],"mappings":"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","file":"js/resources_js_modules_auth_pages_register_index_js.js","sourcesContent":["//import libs\r\nimport React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport $ from 'jquery'\r\nimport _ from 'lodash'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { register } from '../../service'\r\nimport { Validator } from 'ree-validate'\r\n\r\n// import components\r\nimport Form from './components/Form'\r\n\r\n// initialize component\r\nclass Page extends Component {\r\n  static displayName = 'RegisterPage'\r\n  static propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    dispatch: PropTypes.func.isRequired,\r\n  }\r\n  \r\n  constructor(props) {\r\n    super(props)\r\n    \r\n    this.validator = new Validator({\r\n      name: 'required|min:6',\r\n      email: 'required|email',\r\n      password: 'required|min:6',\r\n      passwordConfirmation: 'required|min:6'\r\n    })\r\n    \r\n    this.state = {\r\n      credentials: {\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n        passwordConfirmation: '',\r\n      },\r\n      errors: this.validator.errors,\r\n      fields: this.validator.fields\r\n    }\r\n    \r\n    this.handleChange = this.handleChange.bind(this)\r\n    this.handleSubmit = this.handleSubmit.bind(this)\r\n  }\r\n  \r\n  componentDidMount() {\r\n    $('body').attr('style', 'background-color: #eee')\r\n  }\r\n  \r\n  componentWillUnmount() {\r\n    $('body').removeAttr('style')\r\n  }\r\n  \r\n  // event to handle input change\r\n  handleChange(name, value) {\r\n    const { errors } = this.validator\r\n\r\n    this.setState({credentials: { ...this.state.credentials, [name]: value }})\r\n    errors.remove(name)\r\n    \r\n    this.validator.validate(name, value)\r\n      .then(() => {\r\n        this.setState({ errors })\r\n      })\r\n  }\r\n  \r\n  handleSubmit(e) {\r\n    e.preventDefault()\r\n    const { credentials } = this.state\r\n    const { errors } = this.validator\r\n  \r\n    this.validator.validateAll(credentials)\r\n      .then((success) => {\r\n        if (success) {\r\n          this.submit(credentials)\r\n        } else {\r\n          this.setState({ errors })\r\n        }\r\n      })\r\n  }\r\n  \r\n  submit(credentials) {\r\n    this.props.dispatch(register(credentials))\r\n      .catch(({ error, statusCode }) => {\r\n        const { errors } = this.validator\r\n        \r\n        if (statusCode === 422) {\r\n          _.forOwn(error, (message, field) => {\r\n            errors.add(field, message);\r\n          });\r\n        } else if (statusCode === 401) {\r\n          errors.add('password', error);\r\n        }\r\n        \r\n        this.setState({ errors })\r\n      })\r\n  }\r\n  \r\n  render() {\r\n    // check if user is authenticated then redirect him to home page\r\n    if (this.props.isAuthenticated) {\r\n      return <Redirect to=\"/\" />\r\n    }\r\n    \r\n    const { name, email, password, passwordConfirmation } = this.state.credentials\r\n    const props = {\r\n      name,\r\n      email,\r\n      password,\r\n      passwordConfirmation,\r\n      errors: this.state.errors,\r\n      handleChange: this.handleChange,\r\n      handleSubmit: this.handleSubmit,\r\n    }\r\n    \r\n    return (<div className=\"container py-5\">\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          <div className=\"row\">\r\n            <div className=\"mx-auto\">\r\n              <span className=\"anchor\"/>\r\n              <div className=\"card has-shadow\">\r\n                <div className=\"card-body\">\r\n                  <Form {...props}  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>)\r\n  }\r\n}\r\n\r\nexport default Page\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst displayName = 'RegisterFrom'\r\n\r\nconst propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  email: PropTypes.string.isRequired,\r\n  password: PropTypes.string.isRequired,\r\n  passwordConfirmation: PropTypes.string.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n  handleChange: PropTypes.func.isRequired,\r\n  handleSubmit: PropTypes.func.isRequired,\r\n}\r\n\r\nconst Form = ({ name, email, password, passwordConfirmation, errors, handleChange, handleSubmit }) => {\r\n  return (<form className=\"form\" role=\"form\" onSubmit={handleSubmit} noValidate>\r\n    <h2 className=\"card-title\">Sign up</h2>\r\n    <div className=\"form-group\">\r\n      <label htmlFor=\"name\" className=\"sr-only\">Email</label>\r\n      <input type=\"text\"\r\n             className={`form-control form-control-lg rounded-0 ${errors.has('name') && 'is-invalid'}`}\r\n             name=\"name\"\r\n             id=\"name\"\r\n             placeholder=\"Full Name\"\r\n             value={name || ''}\r\n             onChange={e => handleChange(e.target.name, e.target.value)}\r\n             required\r\n             autoFocus/>\r\n      {errors.has('name') && <div className=\"invalid-feedback\">{errors.first('name')}</div>}\r\n    </div>\r\n    <div className=\"form-group\">\r\n      <label htmlFor=\"email\" className=\"sr-only\">Email</label>\r\n      <input type=\"email\"\r\n             className={`form-control form-control-lg rounded-0 ${errors.has('email') && 'is-invalid'}`}\r\n             name=\"email\"\r\n             id=\"email\"\r\n             placeholder=\"Email address\"\r\n             value={email || ''}\r\n             onChange={e => handleChange(e.target.name, e.target.value)}\r\n             required\r\n             autoFocus/>\r\n      {errors.has('email') && <div className=\"invalid-feedback\">{errors.first('email')}</div>}\r\n    </div>\r\n    <div className=\"form-group\">\r\n      <label htmlFor=\"password\" className=\"sr-only\">Password</label>\r\n      <input type=\"password\"\r\n             className={`form-control form-control-lg rounded-0 ${errors.has('password') && 'is-invalid'}`}\r\n             id=\"password\"\r\n             name=\"password\"\r\n             placeholder=\"Password\"\r\n             value={password || ''}\r\n             onChange={e => handleChange(e.target.name, e.target.value)}\r\n             required/>\r\n      {errors.has('password') && <div className=\"invalid-feedback\">{errors.first('password')}</div>}\r\n    </div>\r\n    <div className=\"form-group\">\r\n      <label htmlFor=\"passwordConfirmation\" className=\"sr-only\">Confirm Password</label>\r\n      <input type=\"password\"\r\n             className={`form-control form-control-lg rounded-0 ${errors.has('passwordConfirmation') && 'is-invalid'}`}\r\n             id=\"passwordConfirmation\"\r\n             name=\"passwordConfirmation\"\r\n             placeholder=\"Confirm Password\"\r\n             value={passwordConfirmation || ''}\r\n             onChange={e => handleChange(e.target.name, e.target.value)}\r\n             required/>\r\n      {errors.has('passwordConfirmation') && <div className=\"invalid-feedback\">{errors.first('passwordConfirmation')}</div>}\r\n    </div>\r\n    <button className=\"btn btn-lg btn-primary btn-block\"\r\n            type=\"submit\"\r\n            disabled={errors.any()}>Sign Up</button>\r\n    <p>Back to<Link to=\"/login\" className=\"btn btn-link\">Login</Link></p>\r\n  </form>)\r\n}\r\n\r\nForm.displayName = displayName\r\nForm.propTypes = propTypes\r\n\r\nexport default Form\r\n","// import libs\r\nimport { connect } from 'react-redux'\r\n\r\n// import components\r\nimport Page from './Page'\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    isAuthenticated: state.auth.isAuthenticated,\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Page)\r\n"],"sourceRoot":""}